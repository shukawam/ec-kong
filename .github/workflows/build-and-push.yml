name: Build and Push Multi-Arch Docker Images

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag (e.g., v1.0.0, latest)'
        required: false
        default: latest

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set image tag
        id: set_image_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push front-end image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.DOCKER_USERNAME }}/front-end:${{ steps.set_image_tag.outputs.IMAGE_TAG }} \
            --push ./front-end

      - name: Build and Push catalogue image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.DOCKER_USERNAME }}/catalogue:${{ steps.set_image_tag.outputs.IMAGE_TAG }} \
            --push ./catalogue

      - name: Build and Push carts image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.DOCKER_USERNAME }}/carts:${{ steps.set_image_tag.outputs.IMAGE_TAG }} \
            --push ./carts

      - name: Build and Push orders image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.DOCKER_USERNAME }}/orders:${{ steps.set_image_tag.outputs.IMAGE_TAG }} \
            --push ./orders
